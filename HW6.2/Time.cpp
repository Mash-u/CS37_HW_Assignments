#include "Time.h"
#include <iostream>

using namespace std;

/************************************************************************************************************************************************************
* NAME         : Time()
* DESCRIPTION  : This is the default contructor for Time class. Instance variables hour, min and sec are set to 0.
* RETURN VALUE : no return value
* -----------------------------------------------------------------------------------------------------------------------------------------------------------
*************************************************************************************************************************************************************/
Time::Time()
{
	hour = 0;
	min = 0;
	sec = 0;
}

/************************************************************************************************************************************************************
* NAME         : Time(int h, int m, int s)
* DESCRIPTION  : Constructor that has 3 formal parameters. Each of which will be assigned to the 3 instance variables of the Time object.
* RETURN VALUE : no return value.
* -----------------------------------------------------------------------------------------------------------------------------------------------------------*
*************************************************************************************************************************************************************/

Time::Time(int newH, int newM, int newS) {

	hour = newH;
	min = newM;
	sec = newS;
}

/************************************************************************************************************************************************************
* NAME         : setTime(int h, int m, int s)
* DESCRIPTION  : setMEthod that is used to modify the instance variables hour, sec, and min. Has 3 formal parameters.
* RETURN VALUE : void
* -----------------------------------------------------------------------------------------------------------------------------------------------------------*
*************************************************************************************************************************************************************/

void Time::setTime(int h, int m, int s)
{
	hour = h;
	min = m;
	sec = s;
}

/************************************************************************************************************************************************************
* NAME         : getMin()
* DESCRIPTION  : get method that returns the value assigned to instance variable member min.
* RETURN VALUE : int
* -----------------------------------------------------------------------------------------------------------------------------------------------------------*
*************************************************************************************************************************************************************/

int Time::getMin() {

	return min;
}

/************************************************************************************************************************************************************
* NAME         : getHour()
* DESCRIPTION  : get/ accessor method that returns the value assigned to instance variable member hour.
* RETURN VALUE : int
* -----------------------------------------------------------------------------------------------------------------------------------------------------------*
*************************************************************************************************************************************************************/

int Time::getHour() {
	return hour;
}

/************************************************************************************************************************************************************
* NAME         : getSec()
* DESCRIPTION  : get/accessor method that returns the value assigned to instance variable member sec.
* RETURN VALUE : int
* -----------------------------------------------------------------------------------------------------------------------------------------------------------*
*************************************************************************************************************************************************************/

int Time::getSec() {
	return sec;
}

/************************************************************************************************************************************************************
* NAME         : getTime(int &h, int &m, int &s)
* DESCRIPTION  : get Method that takes 3 variables local to the calling fucntion as formal parameters. These local variables are passed by reference, and assigned
*                the values of the 3 instance variables of the time object.
* RETURN VALUE : void
* -----------------------------------------------------------------------------------------------------------------------------------------------------------*
*************************************************************************************************************************************************************/

void Time::getTime(int &h, int &m, int &s) {
	h = hour;
	m = min;
	s = sec;
}

/************************************************************************************************************************************************************
* NAME         : compare(int h, int m, int s)
* DESCRIPTION  : This method takes 3 int values as a formal parameter. It compares these 3 variables to the 3 instance variables of the Time object and returns 
*                either a 1 (if the values are equal to eachother) or a 0 (if they're not equal). The bool returned will be stored a variable local to the calling
*                function.
* RETURN VALUE : bool
* -----------------------------------------------------------------------------------------------------------------------------------------------------------*
*************************************************************************************************************************************************************/

bool Time::compare(int h, int m, int s) {
	if ((h == hour) && (m == min) && (s == sec))
	{
		return 1;
	}
	else
	{
		return 0;
	}
}

/************************************************************************************************************************************************************
* NAME         : displayMilFormat()
* DESCRIPTION  : MEthod that outputs the instance variables in military format on screen.
* RETURN VALUE : void
* -----------------------------------------------------------------------------------------------------------------------------------------------------------*
*************************************************************************************************************************************************************/

void Time::displayMilitaryFormat()
{
	cout << hour << ":" << min << ":" << sec << endl;
}

/************************************************************************************************************************************************************
* NAME         : displayRegularFormat()
* DESCRIPTION  : Method that uses several selection statements to output the appropriate time in regular format.
* RETURN VALUE : no return value
* -----------------------------------------------------------------------------------------------------------------------------------------------------------*
*************************************************************************************************************************************************************/

void Time::displayRegularFormat() {

	int tempH;

	if (hour > 12) {
		tempH = hour - 12;

		cout << tempH << ":" << min << ":" << sec << " PM" << endl;
	}

	else if (hour == 0) {
		tempH = 12;

		cout << tempH << ":" << min << ":" << sec << " AM" << endl;
	}

	else if (hour = 12) {
		cout << hour << ":" << min << ":" << sec << " PM" << endl;
	}

	else {
		cout << hour << ":" << min << ":" << sec << " AM" << endl;
	}
}